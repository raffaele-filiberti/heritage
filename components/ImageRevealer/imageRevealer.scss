@import "../../scss/utils";

.revealer {
  overflow: hidden;
  position: relative;
  width: 100%;
  height: 100%;

  &.paragraph {
    max-height: calc(100% - 180px);

    @include mq(lg) {
      max-height: calc(100% - 312px)
    }
  }
}

.image {
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: 50% 50%;
  position: relative;
  pointer-events: none;
  backface-visibility: hidden;
  perspective: 1000px;
  will-change: transform;

  .cover & {

    &:after {
      @include pseudo();
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
      z-index: 0;
      background: linear-gradient(to right, rgba(0, 0, 0, 0.65) 0%, rgba(0, 0, 0, 0) 100%);
    }
  }

  :global(.column) & {
    opacity: 0;
  }

  :global(.in-viewport) & {
    transition: opacity 0s 1300ms;
    opacity: 1;
  }
}

.sliceContainer {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  flex-direction: column;
}

.slice {
  background-color: currentColor;
  flex: 1;
  color: $black;
  box-shadow: 0 1px 0 currentColor;
  transform-origin: left center;
  transform: scaleX(0);
  will-change: transform;

  :global(.in-viewport) & {
    animation: reveal 600ms 700ms cubic-bezier(.694, 0, .335, 1), revealOut 600ms 1300ms cubic-bezier(.694, 0, .335, 1);
    animation-fill-mode: forwards;
    animation-iteration-count: 1;
  }
}

@keyframes reveal {
  0% {
    transform-origin: left center;
    transform: scaleX(0);
  }

  100% {
    transform-origin: left center;
    transform: scaleX(1);
  }
}

@keyframes revealOut {
  0% {
    transform-origin: right center;
    transform: scaleX(1);
  }

  100% {
    transform-origin: right center;
    transform: scaleX(0);
  }
}